class Solution {
public:
    static bool comp(vector<int>& a, vector<int>& b) {
                    if (a[0] != b[0]) return a[0] < b[0];
                    else return a[1] > b[1]; 
                }

                int maxEnvelopes(vector<vector<int>>& env) {
                    int i, n = env.size(), ans = 0;
                    vector<int> lis;
                    sort(env.begin(), env.end(), comp);
                    lis.push_back(env[0][1]);
                    for (i=1;i<n;i++) {
                        if (env[i][1] > lis.back()) lis.push_back(env[i][1]);
                        else {
                            int ind = lower_bound(lis.begin(), lis.end(), env[i][1]) - lis.begin();
                            lis[ind] = env[i][1];
                        }
                    }
                    return lis.size();
        
    }
};
